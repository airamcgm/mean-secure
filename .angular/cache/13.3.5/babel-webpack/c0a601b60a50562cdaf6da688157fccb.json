{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\mary_\\\\Documents\\\\Belvo\\\\git\\\\mean-secure\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport let BelvoWidgetComponent = /*#__PURE__*/(() => {\n  class BelvoWidgetComponent {\n    constructor() {\n      this.title = 'widget-angular';\n    } // implemented method\n\n\n    ngOnInit() {\n      loadScript('https://cdn.belvo.io/belvo-widget-1-stable.js');\n    }\n\n  }\n\n  BelvoWidgetComponent.ɵfac = function BelvoWidgetComponent_Factory(t) {\n    return new (t || BelvoWidgetComponent)();\n  };\n\n  BelvoWidgetComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BelvoWidgetComponent,\n    selectors: [[\"app-belvo-widget\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"main\", 1, \"content\"], [\"id\", \"belvo\"]],\n    template: function BelvoWidgetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  }); // Insert the following code after AppComponent() class from Step 1.\n\n  return BelvoWidgetComponent;\n})();\n\nfunction createWidget() {\n  return _createWidget.apply(this, arguments);\n}\n\nfunction _createWidget() {\n  _createWidget = _asyncToGenerator(function* () {\n    // Function to call your server-side to generate the access_token and retrieve the your access token\n    function getAccessToken() {\n      // Make sure to change /get-access-token to point to your server-side.\n      return fetch('http://localhost:3000/api/belvotoken', {\n        method: 'GET'\n      }).then(response => response.json()).then(data => data).catch(error => console.error('Error:', error));\n    }\n\n    const successCallbackFunction = (link, institution) => {\n      console.log(\"link\" + link); // Do something with the link and institution,\n      // such as associate it with your registered user in your database.\n    };\n\n    const onExitCallbackFunction = data => {\n      console.log(data); // Do something with the exit data.\n    };\n\n    const onEventCallbackFunction = data => {\n      console.log(data); // Do something with the exit data.\n    };\n\n    const config = {\n      // Add your startup configuration here.\n      callback: (link, institution) => successCallbackFunction(link, institution),\n      onExit: data => onExitCallbackFunction(data),\n      onEvent: data => onEventCallbackFunction(data)\n    };\n    const {\n      access\n    } = yield getAccessToken(); // @ts-ignore\n\n    window.belvoSDK.createWidget(access, config).build();\n  });\n  return _createWidget.apply(this, arguments);\n}\n\nfunction loadScript(src) {\n  let node = document.createElement('script');\n  node.src = src;\n  node.type = 'text/javascript';\n  node.async = true; // Assign the callback which will create the Widget\n\n  node.onload = createWidget;\n  document.getElementsByTagName('head')[0].appendChild(node);\n}","map":null,"metadata":{},"sourceType":"module"}